

The Example Processing Files are...

Toplevel...
   generate_all      - accept some flags and run all "generate" scripts
                       using those flags 
   generate_options  - convert command line flags into shell options to
                       control image generation.  Also provides the
                       'usage' output
   index.html
   generate          - generate script for just the top level
                       also contains specific index creation for the
                       four 'image' stores

Each Sub-Directory  (crop is a good general section to study)
   index.html
   generate          - generate for each sub-direcory all very simular
                         * process command line options
                         * clear/backup existing examples
                         * link/copy source images into current directory
                         * generate examples from "index.html"
                         * run any other scripts needed
                         * compare examples against backup
                         * and finally do any special cleanup!
   generate_*        - other generation scripts need for this section

Processing Scripts (toplevel)
   generate_clear    - either deletes all image files, or backs them up
                       for compares. Backup images are prefexed with '_'
   generate_examples - THE MAIN WORKHORSE
                       This is the one that reads the HTML index files,
                       extracts the commands
                       from 'CODE' blocks.  It then runs the command
                       according to command line flags, or flags in each
                       'CODE'
   generate_compare  - compare backed up images against the just
                       generated images to find examples where the
                       results have changed. 
                       Backups are deleted (or not) after comparison
   generate_font_chars   - extract specific characters from of array of
                       an array of characters (for append/montage examples)
   generate_symbols  - extract images from specific fonts, usually used
                       to display mathematical processing (morphology)
   generate_tags     - generate a "tags" index file for vim editor
                       (you can ignore)
   generate_version  - create a image of the current IM version during the
                       example creation of a specific "index.html"

Helper Scripts

   cmp_backups       - look at backup images that was left behind as
                       they fails the image compare.  I manually
                       deletes the backup images when satisfied all is
                       okay.
   forum_link.cgi    - redirect links to the User Forums appropriately.
                       The user forum moved three times during those 10
                       years, and I got sick of having to change all the
                       links in all the index.html, so I have it go thru
                       this script.


The scripts sub-directory is just scripts for processing images using
imagemagick.  Many are referred to and even used by specific examples.
The directory should be in your PATH.

Note in any specific section (sub-directory) I typically tried to keep
what source images are used to a minimum.

I preferred to reuse the source image in multiple examples,
or use previously generated example results for later example input.




  Anthony Thyssen ( System Programmer )    <A.Thyssen@griffith.edu.au>
 --------------------------------------------------------------------------
  My religious faith is a private matter bettween me and my God.
                           -- Robert A. Heinlein  "If this Goes On..."
 --------------------------------------------------------------------------
   Anthony's Castle     http://www.ict.griffith.edu.au/anthony/

